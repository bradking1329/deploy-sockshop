---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: carts
  namespace: sockshop
spec:
  replicas: 1
  selector:
    matchLabels:
      service: carts
      app: carts
  template:
    metadata:
      labels:
        service: carts
        app: carts
        version: v1
    spec:
      containers:
        - name: carts
          image: dynatracesockshop/carts:0.6.0
          env:
            - name: JAVA_OPTS
              value: -Xms128m -Xmx512m -XX:PermSize=128m -XX:MaxPermSize=128m -XX:+UseG1GC -Djava.security.egd=file:/sockshop/urandom
            - name: DT_TAGS
              value: 'product=sockshop'
            - name: DT_CUSTOM_PROP
              value: 'SERVICE_TYPE=BACKEND'
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 400m
              memory: 768Mi
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 15
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 15
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: carts
  labels:
    app: carts
  namespace: sockshop
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: carts
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogue
  namespace: sockshop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: catalogue
  template:
    metadata:
      labels:
        app: catalogue
        version: v1
    spec:
      containers:
        - name: catalogue
          image: dynatracesockshop/catalogue:0.5.0
          env:
            - name: DT_TAGS
              value: 'product=acl-sockshop'
            - name: DT_CUSTOM_PROP
              value: 'SERVICE_TYPE=BACKEND'
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 400m
              memory: 64Mi
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: catalogue
  labels:
    app: catalogue
  namespace: sockshop
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: catalogue
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: front-end
  namespace: sockshop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: front-end
  template:
    metadata:
      labels:
        app: front-end
        version: v1
    spec:
      containers:
        - name: front-end
          image: dynatracesockshop/front-end:0.5.0
          env:
            - name: DT_TAGS
              value: 'product=sockshop'
            - name: DT_CUSTOM_PROP
              value: 'SERVICE_TYPE=FRONTEND'
          resources:
            limits:
              cpu: 300m
              memory: 1024Mi
            requests:
              cpu: 100m
              memory: 320Mi
          ports:
            - containerPort: 8080
          livenessProbe:
            httpGet:
              path: /
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /
              port: 8080
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      nodeSelector:
        beta.kubernetes.io/os: linux

---
apiVersion: v1
kind: Service
metadata:
  name: front-end
  labels:
    app: front-end
  namespace: sockshop
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: front-end
  type: LoadBalancer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders
  namespace: sockshop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders
  template:
    metadata:
      labels:
        app: orders
        version: v1
    spec:
      containers:
        - name: orders
          image: dynatracesockshop/orders:0.6.0
          env:
            - name: JAVA_OPTS
              value: -Xms128m -Xmx512m -XX:PermSize=128m -XX:MaxPermSize=128m -XX:+UseG1GC -Djava.security.egd=file:/sockshop/urandom
            - name: DT_TAGS
              value: 'product=sockshop'
            - name: DT_CUSTOM_PROP
              value: 'SERVICE_TYPE=BACKEND'
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 400m
              memory: 768Mi
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: orders
  labels:
    app: orders
  namespace: sockshop
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: orders
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: payment
  namespace: sockshop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: payment
  template:
    metadata:
      labels:
        app: payment
        version: v1
    spec:
      containers:
        - name: payment
          image: dynatracesockshop/payment:0.5.0
          env:
            - name: DT_TAGS
              value: 'product=sockshop'
            - name: DT_CUSTOM_PROP
              value: 'SERVICE_TYPE=BACKEND'
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 400m
              memory: 64Mi
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: payment
  labels:
    app: payment
  namespace: sockshop
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: payment
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: queue-master
  namespace: sockshop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: queue-master
  template:
    metadata:
      labels:
        app: queue-master
        version: v1
    spec:
      containers:
        - name: queue-master
          image: dynatracesockshop/queue-master:0.5.0
          env:
            - name: JAVA_OPTS
              value: -Xms128m -Xmx512m -XX:PermSize=128m -XX:MaxPermSize=128m -XX:+UseG1GC -Djava.security.egd=file:/sockshop/urandom
            - name: DT_TAGS
              value: 'product=sockshop'
            - name: DT_CUSTOM_PROP
              value: 'SERVICE_TYPE=BACKEND'
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 400m
              memory: 1024Mi
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 15
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 15
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: queue-master
  labels:
    app: queue-master
  namespace: sockshop
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: queue-master
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: shipping
  namespace: sockshop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: shipping
  template:
    metadata:
      labels:
        app: shipping
        version: v1
    spec:
      containers:
        - name: shipping
          image: dynatracesockshop/shipping:0.6.0
          env:
            - name: JAVA_OPTS
              value: -Xms128m -Xmx512m -XX:PermSize=128m -XX:MaxPermSize=128m -XX:+UseG1GC -Djava.security.egd=file:/sockshop/urandom
            - name: DT_TAGS
              value: 'product=sockshop'
            - name: DT_CUSTOM_PROP
              value: 'SERVICE_TYPE=BACKEND'
          resources:
            limits:
              cpu: 500m
              memory: 1024Mi
            requests:
              cpu: 400m
              memory: 768Mi
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 15
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 10
            timeoutSeconds: 15
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: shipping
  labels:
    app: shipping
  namespace: sockshop
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: shipping
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user
  namespace: sockshop
spec:
  replicas: 1
  selector:
    matchLabels:
      app: user
  template:
    metadata:
      labels:
        app: user
        version: v1
    spec:
      containers:
        - name: user
          image: dynatracesockshop/user:0.5.0
          env:
            - name: DT_TAGS
              value: 'product=sockshop'
            - name: DT_CUSTOM_PROP
              value: 'SERVICE_TYPE=BACKEND'
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 400m
              memory: 64Mi
          ports:
            - containerPort: 8080
          volumeMounts:
            - mountPath: /tmp
              name: tmp-volume
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 120
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /health
              port: 8080
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
      volumes:
        - name: tmp-volume
          emptyDir:
            medium: Memory
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: user
  labels:
    app: user
  namespace: sockshop
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8080
  selector:
    app: user
