---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: carts-db
  namespace: sockshop
  labels:
    name: carts-db
spec:
  replicas: 1
  selector:
    matchLabels:
      name: carts-db
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        name: carts-db
    spec:
      containers:
        - image: mongo
          name: carts-db
          ports:
            - containerPort: 27017
          resources: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: carts-db
  namespace: sockshop
spec:
  ports:
    - name: '27017'
      port: 27017
      targetPort: 27017
  selector:
    name: carts-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: catalogue-db
  labels:
    name: catalogue-db
  namespace: sockshop
spec:
  replicas: 1
  selector:
    matchLabels:
      name: catalogue-db
  template:
    metadata:
      labels:
        name: catalogue-db
    spec:
      containers:
        - name: catalogue-db
          image: dynatracesockshop/catalogue-db
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: fake_password
            - name: MYSQL_DATABASE
              value: socksdb
          ports:
            - name: mysql
              containerPort: 3306
---
apiVersion: v1
kind: Service
metadata:
  name: catalogue-db
  labels:
    name: catalogue-db
  namespace: sockshop
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    name: catalogue-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-db
  namespace: sockshop
  labels:
    name: orders-db
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: orders-db
  template:
    metadata:
      labels:
        name: orders-db
    spec:
      containers:
        - image: mongo
          name: orders-db
          ports:
            - containerPort: 27017
          resources: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: orders-db
  namespace: sockshop
spec:
  ports:
    - name: '27017'
      port: 27017
      targetPort: 27017
  selector:
    name: orders-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
  labels:
    name: rabbitmq
  namespace: sockshop
spec:
  replicas: 1
  selector:
    matchLabels:
      name: rabbitmq
  template:
    metadata:
      labels:
        name: rabbitmq
      annotations:
        prometheus.io/scrape: 'false'
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3.6.8-management
          ports:
            - containerPort: 15672
              name: management
            - containerPort: 5672
              name: rabbitmq
          securityContext:
            capabilities:
              drop:
                - all
              add:
                - CHOWN
                - SETGID
                - SETUID
                - DAC_OVERRIDE
            readOnlyRootFilesystem: true
        - name: rabbitmq-exporter
          image: kbudde/rabbitmq-exporter
          ports:
            - containerPort: 9090
              name: exporter
      nodeSelector:
        beta.kubernetes.io/os: linux
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
  labels:
    name: rabbitmq
  namespace: sockshop
spec:
  ports:
    # the port that this service should serve on
    - port: 5672
      name: rabbitmq
      targetPort: 5672
    - port: 9090
      name: exporter
      targetPort: exporter
      protocol: TCP
    - port: 4369
      name: epmd
  selector:
    name: rabbitmq
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: user-db
  namespace: sockshop
  labels:
    name: user-db
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      name: user-db
  template:
    metadata:
      labels:
        name: user-db
    spec:
      containers:
        - image: mongo
          name: user-db
          ports:
            - containerPort: 27017
          resources: {}
      restartPolicy: Always
---
apiVersion: v1
kind: Service
metadata:
  name: user-db
  namespace: sockshop
spec:
  ports:
    - name: '27017'
      port: 27017
      targetPort: 27017
  selector:
    name: user-db
